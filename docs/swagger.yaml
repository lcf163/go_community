basePath: /api/v1
definitions:
  controller._ResponsePostDetail:
    properties:
      code:
        allOf:
        - $ref: '#/definitions/controller.MyCode'
        description: 业务响应状态码
        example: 1000
      data:
        allOf:
        - $ref: '#/definitions/models.ApiPostDetail'
        description: 帖子详情数据
      message:
        description: 提示信息
        example: success
        type: string
    type: object
  controller._ResponsePostList:
    properties:
      code:
        allOf:
        - $ref: '#/definitions/controller.MyCode'
        description: 业务响应状态码
        example: 1000
      data:
        description: 帖子列表数据
        items:
          $ref: '#/definitions/models.ApiPostDetail'
        type: array
      message:
        description: 提示信息
        example: success
        type: string
    type: object
  controller.MyCode:
    enum:
    - 1000
    - 1001
    - 1002
    - 1003
    - 1004
    - 1005
    - 1006
    - 1007
    - 1008
    - 1009
    - 1010
    - 1011
    - 1012
    - 1013
    - 1014
    - 1015
    - 1016
    - 1017
    type: integer
    x-enum-varnames:
    - CodeSuccess
    - CodeInvalidParams
    - CodeUserExist
    - CodeUserNotExist
    - CodeInvalidPassword
    - CodeServerBusy
    - CodeInvalidToken
    - CodeInvalidAuthFormat
    - CodeNotLogin
    - CodeVoteRepeated
    - CodeVoteTimeExpire
    - CodeNoPermission
    - CodeFileUploadFailed
    - CodeFileSizeExceeded
    - CodeInvalidFileType
    - CodeCommunityExist
    - CodeCommunityNotExist
    - CodeCommunityHasPost
  controller.ResponseData:
    properties:
      code:
        $ref: '#/definitions/controller.MyCode'
      data:
        description: 若该字段为空，则不显示
      message: {}
    type: object
  models.ApiPostDetail:
    properties:
      author_avatar:
        description: 头像相对路径
        type: string
      author_id:
        type: integer
      author_name:
        description: 作者名
        type: string
      comment_count:
        description: 帖子评论的数量
        type: integer
      community:
        allOf:
        - $ref: '#/definitions/models.CommunityDetail'
        description: 嵌入社区结构体
      community_id:
        type: integer
      content:
        type: string
      create_time:
        type: string
      post_id:
        example: "0"
        type: string
      status:
        type: integer
      title:
        type: string
      vote_num:
        description: 投票数量
        type: integer
    required:
    - community_id
    - content
    - title
    type: object
  models.CommunityDetail:
    properties:
      community_id:
        type: integer
      community_name:
        type: string
      create_time:
        type: string
      introduction:
        type: string
      status:
        type: integer
    type: object
  models.ParamPost:
    properties:
      community_id:
        description: 社区ID
        type: integer
      content:
        description: 内容
        type: string
      title:
        description: 标题
        type: string
    required:
    - community_id
    - content
    - title
    type: object
  models.ParamUpdatePost:
    properties:
      content:
        description: 内容
        type: string
      post_id:
        description: 帖子id
        type: integer
      title:
        description: 标题
        type: string
    required:
    - content
    - post_id
    - title
    type: object
host: localhost:8081
info:
  contact: {}
  description: go_community API documentation
  termsOfService: http://swagger.io/terms/
  title: go_community backend
  version: "1.0"
paths:
  /post:
    post:
      consumes:
      - application/json
      description: 创建新帖子
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 帖子信息
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.ParamPost'
      produces:
      - application/json
      responses:
        "1000":
          description: ""
          schema:
            $ref: '#/definitions/controller.ResponseData'
        "1001":
          description: 参数错误
          schema:
            $ref: '#/definitions/controller.ResponseData'
        "1005":
          description: 服务繁忙
          schema:
            $ref: '#/definitions/controller.ResponseData'
        "1006":
          description: 无效的Token
          schema:
            $ref: '#/definitions/controller.ResponseData'
        "1008":
          description: 未登录
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - ApiKeyAuth: []
      summary: 创建帖子
      tags:
      - 帖子相关接口
    put:
      consumes:
      - application/json
      description: 更新帖子内容
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 帖子更新信息
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.ParamUpdatePost'
      produces:
      - application/json
      responses:
        "1000":
          description: ""
          schema:
            $ref: '#/definitions/controller.ResponseData'
        "1001":
          description: 参数错误
          schema:
            $ref: '#/definitions/controller.ResponseData'
        "1005":
          description: 服务繁忙
          schema:
            $ref: '#/definitions/controller.ResponseData'
        "1008":
          description: 未登录
          schema:
            $ref: '#/definitions/controller.ResponseData'
        "1011":
          description: 无操作权限
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - ApiKeyAuth: []
      summary: 更新帖子
      tags:
      - 帖子相关接口
  /post/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定帖子
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 帖子ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "1000":
          description: ""
          schema:
            $ref: '#/definitions/controller.ResponseData'
        "1001":
          description: 参数错误
          schema:
            $ref: '#/definitions/controller.ResponseData'
        "1005":
          description: 服务繁忙
          schema:
            $ref: '#/definitions/controller.ResponseData'
        "1008":
          description: 未登录
          schema:
            $ref: '#/definitions/controller.ResponseData'
        "1011":
          description: 无操作权限
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - ApiKeyAuth: []
      summary: 删除帖子
      tags:
      - 帖子相关接口
    get:
      consumes:
      - application/json
      description: 获取帖子的详细信息
      parameters:
      - description: 帖子ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "1000":
          description: ""
          schema:
            $ref: '#/definitions/controller._ResponsePostDetail'
        "1001":
          description: 参数错误
          schema:
            $ref: '#/definitions/controller.ResponseData'
        "1005":
          description: 服务繁忙
          schema:
            $ref: '#/definitions/controller.ResponseData'
      summary: 获取帖子详情
      tags:
      - 帖子相关接口
  /posts:
    get:
      consumes:
      - application/json
      description: 分页获取帖子列表
      parameters:
      - default: 1
        description: 页码
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 5
        description: 每页数量
        in: query
        maximum: 10
        minimum: 1
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "1000":
          description: ""
          schema:
            $ref: '#/definitions/controller._ResponsePostList'
        "1001":
          description: 参数错误
          schema:
            $ref: '#/definitions/controller.ResponseData'
        "1005":
          description: 服务繁忙
          schema:
            $ref: '#/definitions/controller.ResponseData'
      summary: 获取帖子列表
      tags:
      - 帖子相关接口
  /posts/user/{id}:
    get:
      consumes:
      - application/json
      description: 获取指定用户发布的帖子列表
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      - default: 1
        description: 页码
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 5
        description: 每页数量
        in: query
        maximum: 10
        minimum: 1
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "1000":
          description: ""
          schema:
            $ref: '#/definitions/controller._ResponsePostList'
        "1001":
          description: 参数错误
          schema:
            $ref: '#/definitions/controller.ResponseData'
        "1003":
          description: 用户不存在
          schema:
            $ref: '#/definitions/controller.ResponseData'
        "1005":
          description: 服务繁忙
          schema:
            $ref: '#/definitions/controller.ResponseData'
      summary: 获取用户帖子列表
      tags:
      - 帖子相关接口
  /posts2:
    get:
      consumes:
      - application/json
      description: 按时间或分数排序查询帖子列表接口
      parameters:
      - description: 可以为空
        in: query
        name: community_id
        type: integer
      - description: 排序依据
        example: score
        in: query
        name: order
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller._ResponsePostList'
      summary: 升级版帖子列表接口
      tags:
      - 帖子相关接口
  /search:
    get:
      consumes:
      - application/json
      description: 根据关键词搜索帖子
      parameters:
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 关键字搜索
        in: query
        name: search
        type: string
      - description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "1000":
          description: ""
          schema:
            $ref: '#/definitions/controller._ResponsePostList'
        "1001":
          description: 参数错误
          schema:
            $ref: '#/definitions/controller.ResponseData'
        "1005":
          description: 服务繁忙
          schema:
            $ref: '#/definitions/controller.ResponseData'
      summary: 搜索帖子
      tags:
      - 帖子相关接口
securityDefinitions:
  Bearer:
    description: 在值的前面添加 Bearer，并带上空格。例如：Bearer your_token_here
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
